<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:context="http://www.springframework.org/schema/context"
         xmlns:p="http://www.springframework.org/schema/p"
         xmlns:aop="http://www.springframework.org/schema/aop"
         xmlns:tx="http://www.springframework.org/schema/tx"
         xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop.xsd">

        <!--1扫描类包，将标注Spring注解的类自动转化为Bean,同时完成Bean的注入-->
        <context:component-scan base-package="com.smart.dao"/>
        <!--1扫描类包，将标注Spring注解的类自动转化为Bean,同时完成Bean的注入-->
        <context:component-scan base-package="com.smart.service"/>
        <!--2定义DBCP数据源-->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
                p:driverClassName="com.mysql.jdbc.Driver"
                p:url="jdbc:mysql://localhost:3306/sampledb"
                p:username="root"
                p:password="root"/>
        <!--3定义JDBC模板Bean-->
        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
                p:dataSource-ref="dataSource"/>

        <!--配置事务管理-->
        <bean id="transactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
              p:dataSource-ref="dataSource"/>

        <!--通过AOP配置提供事务增强，让service包下所有bean的方法拥有事务-->
        <aop:config proxy-target-class="true">
                <aop:pointcut id="serviceMethod"
                              expression="(execution(* com.smart..service..*(..))) and
                              (@annotation(org.springframework.transaction.annotation.Transactional)))"/>
                <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>
        </aop:config>

        <tx:advice id="txAdvice" transaction-manager="transactionManager">
                <tx:attributes>
                        <tx:method name="*" />
                </tx:attributes>
        </tx:advice>
</beans>